service: sbf
frameworkVersion: ">=1.50.0 <2.0.0"
provider:
  name: aws
  runtime: nodejs14.x
  timeout: 30
  memorySize: 512
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  deploymentBucket:
    name: sbf-sls-artifacts-custom-test-${self:provider.stage}
  vpc:
    securityGroupIds:
      - sg-026d83888df8aa77d
    subnetIds:
      - subnet-06761316782230c98
      - subnet-052df03e273a7e04c
  useDotenv: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'ssm:GetParameter'
        - 'ssm:GetParameters'
        - 'ssm:GetParameterHistory'
        - 'ssm:GetParametersByPath'
        - 'ssm:DescribeParameters'
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
        - dynamodb:CreateTable
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
        - dynamodb:Scan
      Resource: "*"
  environment:
    STAGE: "${self:provider.stage}"
    SQS_UPDATE_EXCHANGE_RATE_ARN: ${ssm:/exchangeRate/infra/sqs/updateExchangeRateQueueArn}
    EXCHANGE_RATE_API_KEY: ${ssm:/exchangeRate/infra/api/exchangeRate/token}
    EXCHANGE_RATE_INTERNAL_ALB_URL: ${ssm:/exchangeRate/infra/alb/exchangeRate/http/url}

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dynamodb-local

custom:
  funcDir: src/4-framework/functions
  baseApi: api/v1/sbf
  baseApiInternal: api/v1
  albHttpListenerArn: ${ssm:/exchangeRate/infra/alb/exchangeRate/http/arn}
  serverless-offline:
    port: 4000
    stage: dev

functions:
  # Exchange Rate
  - ${file(${self:custom.funcDir}/exchangeRate/_handlers.yml)}

  # Product
  - ${file(${self:custom.funcDir}/product/_handlers.yml)}
